package io.opentelemetry.javaagent.instrumentation.spark.v2_4;

import java.text.NumberFormat;

public class ApplicationAttemptId {

  public static final String appAttemptIdStrPrefix = "appattempt_";
  private final ApplicationId applicationId;
  private final int attemptId;

  ApplicationAttemptId(ApplicationId appId, int attemptId) {
    this.applicationId = appId;
    this.attemptId = attemptId;
  }

  public static ApplicationAttemptId newInstance(ApplicationId appId, int attemptId) {
    return new ApplicationAttemptId(appId, attemptId);
  }

  public ApplicationId getApplicationId() {
    return this.applicationId;
  }

  public int getAttemptId() {
    return this.attemptId;
  }

  static final ThreadLocal<NumberFormat> attemptIdFormat =
      new ThreadLocal<NumberFormat>() {
        @Override
        public NumberFormat initialValue() {
          NumberFormat fmt = NumberFormat.getInstance();
          fmt.setGroupingUsed(false);
          fmt.setMinimumIntegerDigits(6);
          return fmt;
        }
      };

  @Override
  public int hashCode() {
    // Generated by eclipse.
    final int prime = 347671;
    int result = 5501;
    ApplicationId appId = getApplicationId();
    result = prime * result + appId.hashCode();
    result = prime * result + getAttemptId();
    return result;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass() != obj.getClass()) return false;
    ApplicationAttemptId other = (ApplicationAttemptId) obj;
    if (!this.getApplicationId().equals(other.getApplicationId())) return false;
    if (this.getAttemptId() != other.getAttemptId()) return false;
    return true;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder(appAttemptIdStrPrefix);
    sb.append(this.getApplicationId().getClusterTimestamp()).append("_");
    sb.append(ApplicationId.appIdFormat.get().format(this.getApplicationId().getId()));
    sb.append("_").append(attemptIdFormat.get().format(getAttemptId()));
    return sb.toString();
  }
}
